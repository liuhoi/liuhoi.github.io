<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>刘辉的博客</title>
  
  <subtitle>付出努力才会得到回报</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://liuhoi.github.io/"/>
  <updated>2018-04-09T14:20:16.091Z</updated>
  <id>https://liuhoi.github.io/</id>
  
  <author>
    <name>刘辉</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>mui+vue结合使用</title>
    <link href="https://liuhoi.github.io/2017/11/15/mui-vue%E7%BB%93%E5%90%88%E4%BD%BF%E7%94%A8/"/>
    <id>https://liuhoi.github.io/2017/11/15/mui-vue结合使用/</id>
    <published>2017-11-15T12:52:40.000Z</published>
    <updated>2018-04-09T14:20:16.091Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Mui组件通用CSS类名"><a href="#Mui组件通用CSS类名" class="headerlink" title="Mui组件通用CSS类名"></a>Mui组件通用CSS类名</h2><h3 id="省略"><a href="#省略" class="headerlink" title="省略"></a>省略</h3><blockquote><p>当文字内容超过一行或者多行时，溢出文本用省略号代替。</p></blockquote><ol><li><p>显示单行：.mui-ellipsis<br><code>&lt;p class=&quot;mui-ellipsis&quot;&gt;我在一行内，当我超出了会。&lt;/p&gt;</code></p></li><li><p>显示两行：.mui-ellipsis-2<br><code>&lt;p class=&quot;mui-ellipsis-2&quot;&gt;我在一行内，当我超出了会。&lt;/p&gt;</code></p></li><li><p>若需要设置显示多行，通过设置-webkit-line-clamp属性，如显示三行添加style=”-webkit-line-clamp:3”:<br><code>&lt;p class=&quot;mui-ellipsis-2&quot; style=&quot;-webkit-line-clamp:3&quot;&gt;我在三行内，当我超出了会显示省略号。我在三行内，当我超出了会显示省略号。我在三行内，当我超出了会显示省略号。我在三行内，当我超出了会显示省略号。我在三行内，当我超出了会显示省略号。我在三行内，当我超出了会显示省略号。&lt;/p&gt;</code></p></li></ol><h3 id="布局"><a href="#布局" class="headerlink" title="布局"></a>布局</h3><blockquote><p>整体结构如下：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;header class=&quot;mui-bar mui-bar-nav&quot;&gt;</span><br><span class="line">    &lt;a class=&quot;mui-action-back mui-icon mui-icon-left-nav mui-pull-left&quot;&gt;&lt;/a&gt;</span><br><span class="line">    &lt;h1 class=&quot;mui-title&quot;&gt;标题&lt;/h1&gt;</span><br><span class="line">&lt;/header&gt;</span><br><span class="line">&lt;footer class=&quot;mui-bar mui-bar-footer&quot;&gt;</span><br><span class="line">底部</span><br><span class="line">&lt;/footer&gt;</span><br><span class="line">&lt;div class=&quot;mui-content&quot;&gt;</span><br><span class="line">主体</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><blockquote><p>当底部内容为选项卡时候，我们会将.mui-bar-footer替换为.mui-bar-tab：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;nav class=&quot;mui-bar mui-bar-tab&quot;&gt;</span><br><span class="line">    &lt;a class=&quot;mui-tab-item mui-active&quot;&gt;</span><br><span class="line">        &lt;span class=&quot;mui-icon mui-icon-home&quot;&gt;&lt;/span&gt;</span><br><span class="line">        &lt;span class=&quot;mui-tab-label&quot;&gt;首页&lt;/span&gt;</span><br><span class="line">    &lt;/a&gt;</span><br><span class="line">    &lt;a class=&quot;mui-tab-item&quot;&gt;</span><br><span class="line">        &lt;span class=&quot;mui-icon mui-icon-phone&quot;&gt;&lt;/span&gt;</span><br><span class="line">        &lt;span class=&quot;mui-tab-label&quot;&gt;电话&lt;/span&gt;</span><br><span class="line">    &lt;/a&gt;</span><br><span class="line">    &lt;a class=&quot;mui-tab-item&quot;&gt;</span><br><span class="line">        &lt;span class=&quot;mui-icon mui-icon-email&quot;&gt;&lt;/span&gt;</span><br><span class="line">        &lt;span class=&quot;mui-tab-label&quot;&gt;邮件&lt;/span&gt;</span><br><span class="line">    &lt;/a&gt;</span><br><span class="line">    &lt;a class=&quot;mui-tab-item&quot;&gt;</span><br><span class="line">        &lt;span class=&quot;mui-icon mui-icon-gear&quot;&gt;&lt;/span&gt;</span><br><span class="line">        &lt;span class=&quot;mui-tab-label&quot;&gt;设置&lt;/span&gt;</span><br><span class="line">    &lt;/a&gt;</span><br><span class="line">&lt;/nav&gt;</span><br></pre></td></tr></table></figure><h3 id="局部元素布局"><a href="#局部元素布局" class="headerlink" title="局部元素布局"></a>局部元素布局</h3><h4 id="设置边距-默认为10px外边距-。"><a href="#设置边距-默认为10px外边距-。" class="headerlink" title="设置边距  (默认为10px外边距)。"></a>设置边距  (默认为10px外边距)。</h4><p><code>.mui-content-padded</code></p><h4 id="设置元素为内联块，内联，块对象"><a href="#设置元素为内联块，内联，块对象" class="headerlink" title="设置元素为内联块，内联，块对象"></a>设置元素为内联块，内联，块对象</h4><p><code>.mui-inlineblock  .mui-inline   .mui-block</code></p><h4 id="浮动"><a href="#浮动" class="headerlink" title="浮动"></a>浮动</h4><p><code>.mui-clearfix  .mui-pull-left   .mui-pull-right</code></p><h4 id="OS环境判断多平台适配："><a href="#OS环境判断多平台适配：" class="headerlink" title="OS环境判断多平台适配："></a>OS环境判断多平台适配：</h4><blockquote><p>mui会通过.mui.os.*方法判断环境，将.mui-plus，.mui-plus-stream，.mui-ios，.mui-android，.mui-wechat，.mui-ios-version，.mui-android-version，.mui-wechat-version绑定在document.body.classList中，我们可以通过这些样式类判断当前的运行判断，于是可以做出一些适配，如：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;mui-input-row mui-plus-visible&quot;&gt;</span><br><span class="line">    &lt;label&gt;mui-plus-visible&lt;/label&gt;</span><br><span class="line">    &lt;input type=&quot;text&quot; class=&quot;mui-input-speech mui-input-clear&quot; placeholder=&quot;我在web环境下隐藏5+环境下显示&quot;&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;mui-input-row mui-plus-hidden&quot;&gt;</span><br><span class="line">    &lt;label&gt;mui-plus-hidden&lt;/label&gt;</span><br><span class="line">    &lt;input type=&quot;text&quot; class=&quot;mui-input-clear&quot; placeholder=&quot;我在web环境下显示5+环境下隐藏&quot;&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><blockquote><p>mui中默认在plus环境下和微信环境下设置了样式几个样式：</p></blockquote><ol><li>mui-plus-visible：在plus环境下显示，非plsu环境下隐藏</li><li>mui-wechat-visible：在wechat环境下显示，非wechat环境下隐藏</li><li>mui-plus-hidden：在plus环境下隐藏，非plsu环境下显示</li><li>mui-wechat-hidden：在wechat环境下隐藏，非wechat环境下显示</li></ol><h4 id="栅格系统布局"><a href="#栅格系统布局" class="headerlink" title="栅格系统布局"></a>栅格系统布局</h4><p><code>.mui-row  mui-col-xs-4 mui-col-sm-3</code></p><h4 id="区域滚动布局-需手动设置高度，否者滚动区域没有高度"><a href="#区域滚动布局-需手动设置高度，否者滚动区域没有高度" class="headerlink" title="区域滚动布局(需手动设置高度，否者滚动区域没有高度)"></a>区域滚动布局(需手动设置高度，否者滚动区域没有高度)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;mui-scroll-wrapper&quot;&gt;</span><br><span class="line">&lt;div class=&quot;mui-scroll&quot;&gt;</span><br><span class="line">&lt;!--这里放置真实显示的DOM内容--&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><blockquote><p>// 常用配置项</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">var options = &#123;</span><br><span class="line">scrollY: true, //是否竖向滚动</span><br><span class="line">scrollX: false, //是否横向滚动</span><br><span class="line">startX: 0, //初始化时滚动至x</span><br><span class="line">startY: 0, //初始化时滚动至y</span><br><span class="line">indicators: true, //是否显示滚动条</span><br><span class="line">deceleration:0.0006 //阻尼系数,系数越小滑动越灵敏</span><br><span class="line">bounce: true, //是否启用回弹</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>eg：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mui(&apos;.mui-scroll-wrapper&apos;).scroll(&#123;</span><br><span class="line">deceleration: 0.0005 //flick 减速系数，系数越大，滚动速度越慢，滚动距离越小，默认值0.0006</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><blockquote><p>手动设置高度：<br>一般在scroll控件最外面设置div为绝对定位，设置top,bottom,left,right值，为了方便，mui默认设置有个全屏类.mui-fullscreen。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">.mui-fullscreen &#123;</span><br><span class="line">position: absolute;</span><br><span class="line">top: 0;</span><br><span class="line">right: 0;</span><br><span class="line">bottom: 0;</span><br><span class="line">left: 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Mui常用配置"><a href="#Mui常用配置" class="headerlink" title="Mui常用配置"></a>Mui常用配置</h2><h3 id="mui-openWindow配置（最好是通过URL传参数，使用extras有兼容性问题）"><a href="#mui-openWindow配置（最好是通过URL传参数，使用extras有兼容性问题）" class="headerlink" title="mui.openWindow配置（最好是通过URL传参数，使用extras有兼容性问题）"></a>mui.openWindow配置（最好是通过URL传参数，使用extras有兼容性问题）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">mui.openWindow(&#123;</span><br><span class="line">url: name + &apos;.html?id=&apos; + id,</span><br><span class="line">id: name + &apos;.html?id=&apos; + id,</span><br><span class="line">styles: &#123;</span><br><span class="line">popGesture: &apos;close&apos;,//苹果返回</span><br><span class="line">&#125;,</span><br><span class="line">extras: &#123;</span><br><span class="line">//自定义扩展参数，可以用来处理页面间传值,仅仅首次创建有自定义扩展参数</span><br><span class="line">&#125;,</span><br><span class="line">createNew: false, //是否重复创建同样id的webview，默认为false:不重复创建，直接显示</span><br><span class="line">show: &#123;</span><br><span class="line">autoShow: true, //页面loaded事件发生后自动显示，默认为true</span><br><span class="line">aniShow: &apos;slide-in-right&apos;, //页面显示动画，默认为”slide-in-right“；</span><br><span class="line">duration: 200, //页面动画持续时间，Android平台默认100毫秒，iOS平台默认200毫秒；</span><br><span class="line">event: &apos;titleUpdate&apos;, //页面显示时机，默认为titleUpdate事件时显示</span><br><span class="line">extras: &#123;&#125; //窗口动画是否使用图片加速</span><br><span class="line">&#125;,</span><br><span class="line">waiting: &#123;</span><br><span class="line">autoShow: true, //自动显示等待框，默认为true</span><br><span class="line">title: &apos;加载中&apos;, //等待对话框上显示的提示内容</span><br><span class="line">options: &#123;</span><br><span class="line">//width:120,等待框背景区域宽度，默认根据内容自动计算合适宽度</span><br><span class="line">//height:100,等待框背景区域高度，默认根据内容自动计算合适高度</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="单webview上拉加载下拉刷新配置"><a href="#单webview上拉加载下拉刷新配置" class="headerlink" title="单webview上拉加载下拉刷新配置"></a>单webview上拉加载下拉刷新配置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">mui.init(&#123;</span><br><span class="line">swipeBack: false,</span><br><span class="line">pullRefresh: &#123;</span><br><span class="line">container: &apos;#pullrefresh&apos;,</span><br><span class="line">down: &#123;</span><br><span class="line">style: &apos;circle&apos;,</span><br><span class="line">offset: &apos;44px&apos;,</span><br><span class="line">contentdown: &quot;下拉可以刷新&quot;, //可选，在下拉可刷新状态时，下拉刷新控件上显示的标题内容</span><br><span class="line">    contentover: &quot;释放立即刷新&quot;, //可选，在释放可刷新状态时，下拉刷新控件上显示的标题内容</span><br><span class="line">contentrefresh: &quot;正在刷新...&quot;, //可选，正在刷新状态时，下拉刷新控件上显示的标题内容</span><br><span class="line">auto: false,</span><br><span class="line">callback: function()&#123;&#125;</span><br><span class="line">&#125;,</span><br><span class="line">up: &#123;</span><br><span class="line">auto: false,</span><br><span class="line">contentrefresh: &apos;正在加载...&apos;,</span><br><span class="line">callback: function()&#123;&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="下拉刷新和上拉加载实现-下拉刷新中有重置上拉加载的方法"><a href="#下拉刷新和上拉加载实现-下拉刷新中有重置上拉加载的方法" class="headerlink" title="下拉刷新和上拉加载实现(下拉刷新中有重置上拉加载的方法)"></a>下拉刷新和上拉加载实现(下拉刷新中有重置上拉加载的方法)</h3><blockquote><p>下拉刷新</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">function() &#123; //下拉刷新具体业务实现</span><br><span class="line">setTimeout(function() &#123;</span><br><span class="line">index = 1;</span><br><span class="line">alert(&apos; 下拉刷新&apos;);</span><br><span class="line">mui(&apos;#pullrefresh&apos;).pullRefresh().refresh(true)</span><br><span class="line">mui(&apos;#pullrefresh&apos;).pullRefresh().endPullupToRefresh(false); //参数为true代表没有更多数据了。</span><br><span class="line">mui(&apos;#pullrefresh&apos;).pullRefresh().endPulldownToRefresh(); //refresh completed</span><br><span class="line">&#125;, 500);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>上拉加载</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">function() &#123; //上拉加载具体业务实现</span><br><span class="line">setTimeout(function() &#123;</span><br><span class="line">index++</span><br><span class="line">mui(&apos;#pullrefresh&apos;).pullRefresh().endPullupToRefresh(index&gt;pageAll); //参数为true代表没有更多数据了。</span><br><span class="line">if(index&lt;=pageAll)&#123;</span><br><span class="line">alert(&apos; 上拉加载&apos;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;, 500);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Ajax请求"><a href="#Ajax请求" class="headerlink" title="Ajax请求"></a>Ajax请求</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">mui.ajax(&#123;</span><br><span class="line">url: url,//请求地址</span><br><span class="line">data: data,//请求参数</span><br><span class="line">async: true,</span><br><span class="line">dataType: &apos;json&apos;,</span><br><span class="line">crossDomain: true, //强制使用5+跨域</span><br><span class="line">type: &apos;post&apos;,</span><br><span class="line">timeout: 28000,</span><br><span class="line">headers: &#123;&apos;Content-Type&apos;: &apos;application/x-www-form-urlencoded&#125;,</span><br><span class="line">beforeSend: function()&#123;&#125;,</span><br><span class="line">success: function()&#123;&#125;,</span><br><span class="line">error: function(XMLHttpRequest, textStatus, errorThrown) &#123;&#125;,</span><br><span class="line">complete: function()&#123;&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="Mui与jq冲突解决办法"><a href="#Mui与jq冲突解决办法" class="headerlink" title="Mui与jq冲突解决办法"></a>Mui与jq冲突解决办法</h3><p><code>var $j = jQuery.noConflict(true);</code></p><h3 id="Mui传值"><a href="#Mui传值" class="headerlink" title="Mui传值"></a>Mui传值</h3><blockquote><p>传递参数</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mui.fire(webview, &apos;show&apos;, &#123;</span><br><span class="line">id: &apos;id&apos;, //传往对应webview的值  </span><br><span class="line">name: &apos;name2&apos; //传往对应webview的值  </span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><blockquote><pre><code>接受参数</code></pre></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">window.addEventListener(&apos;show&apos;, function(event) &#123;</span><br><span class="line">//获得事件参数  </span><br><span class="line">var id = event.detail.id;</span><br><span class="line">var name = event.detail.name;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="Div模式下顶部渐变配置"><a href="#Div模式下顶部渐变配置" class="headerlink" title="Div模式下顶部渐变配置"></a>Div模式下顶部渐变配置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;mui-scroll-wrapper&quot;&gt;</span><br><span class="line">&lt;div class=&quot;mui-scroll&quot;&gt;</span><br><span class="line">&lt;!--这里放置真实显示的DOM内容--&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;header class=&quot;mui-bar mui-bar-transparent&quot;&gt;</span><br><span class="line">&lt;a class=&quot;mui-action-back mui-icon mui-icon-left-nav mui-pull-left&quot;&gt;&lt;/a&gt;</span><br><span class="line">&lt;h1 class=&quot;mui-title&quot;&gt;产品信息&lt;/h1&gt;</span><br><span class="line">&lt;/header&gt;</span><br><span class="line">&lt;div class=&quot;mui-content&quot;&gt;</span><br><span class="line">&lt;!--背景图片--&gt;</span><br><span class="line">&lt;img id=&quot;img1&quot; src=&quot;../../img/homePage/detailBg.png&quot;&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><blockquote><p>常用配置项<br>顶部渐变参数</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mui(&apos;.mui-bar-transparent&apos;).transparent(&#123;</span><br><span class="line">top: 0,</span><br><span class="line">offset: 54,</span><br><span class="line">duration: 16,</span><br><span class="line">scrollby: document.querySelector(&apos;.mui-scroll-wrapper&apos;) || window</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="Mui返回时刷新"><a href="#Mui返回时刷新" class="headerlink" title="Mui返回时刷新"></a>Mui返回时刷新</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var wobj = plus.webview.getWebviewById(opener);</span><br><span class="line">wobj.reload(true);</span><br></pre></td></tr></table></figure><h3 id="Mui中判断是否断网"><a href="#Mui中判断是否断网" class="headerlink" title="Mui中判断是否断网"></a>Mui中判断是否断网</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">if(window.plus &amp;&amp; plus.networkinfo.getCurrentType() === plus.networkinfo.CONNECTION_NONE) &#123;</span><br><span class="line">plus.nativeUI.toast(&apos;似乎已断开与互联网的连接&apos;, &#123;</span><br><span class="line">verticalAlign: &apos;top&apos;</span><br><span class="line">&#125;);</span><br><span class="line">return;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="mui常用函数封装"><a href="#mui常用函数封装" class="headerlink" title="mui常用函数封装"></a>mui常用函数封装</h2><h3 id="常用Picker"><a href="#常用Picker" class="headerlink" title="常用Picker"></a>常用Picker</h3><blockquote><p>poppicker组件依赖mui.picker.js/.css mui.poppicker.js/.css请务必在mui.js/css后中引用,也可统一引用 压缩版本:mui.picker.min.js<br>备注：可通过 instance.pickers[index] 拿到指定层级的实例，然后通过setSelectedIndex()和setSelectedValue()两个方法,设定指定层级的选中项</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">var picker = new mui.PopPicker();</span><br><span class="line">picker.setData([&#123;</span><br><span class="line">    value: &quot;first&quot;,</span><br><span class="line">    text: &quot;第一项&quot;</span><br><span class="line">&#125;, &#123;</span><br><span class="line">    value: &quot;second&quot;,</span><br><span class="line">    text: &quot;第一项&quot;</span><br><span class="line">&#125;, &#123;</span><br><span class="line">    value: &quot;third&quot;,</span><br><span class="line">    text: &quot;第三项&quot;</span><br><span class="line">&#125;, &#123;</span><br><span class="line">    value: &quot;fourth&quot;,</span><br><span class="line">    text: &quot;第四项&quot;</span><br><span class="line">&#125;, &#123;</span><br><span class="line">    value: &quot;fifth&quot;,</span><br><span class="line">    text: &quot;第五项&quot;</span><br><span class="line">&#125;])</span><br><span class="line">//picker.pickers[0].setSelectedIndex(4, 2000);</span><br><span class="line">picker.pickers[0].setSelectedValue(&apos;fourth&apos;, 2000);</span><br><span class="line">picker.show(function(SelectedItem) &#123;</span><br><span class="line">picker.dispose();</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="地址选择器"><a href="#地址选择器" class="headerlink" title="地址选择器"></a>地址选择器</h3><blockquote><p>poppicker组件依赖mui.picker.js/.css mui.poppicker.js/.css请务必在mui.js/css后中引用,也可统一引用 压缩版本:mui.picker.min.js</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">var picker = new mui.PopPicker(&#123;</span><br><span class="line">    layer: 2//设置几级联动</span><br><span class="line">&#125;);</span><br><span class="line">picker.setData([&#123;</span><br><span class="line">    value: &apos;110000&apos;,</span><br><span class="line">    text: &apos;北京市&apos;,</span><br><span class="line">    children: [&#123;</span><br><span class="line">            value: &quot;110101&quot;,</span><br><span class="line">            text: &quot;东城区&quot;</span><br><span class="line">    &#125;]</span><br><span class="line">&#125;, &#123;</span><br><span class="line">    value: &apos;120000&apos;,</span><br><span class="line">    text: &apos;天津市&apos;,</span><br><span class="line">    children: [&#123;</span><br><span class="line">        value: &quot;120101&quot;,</span><br><span class="line">        text: &quot;和平区&quot;</span><br><span class="line">    &#125;, &#123;</span><br><span class="line">        value: &quot;120102&quot;,</span><br><span class="line">        text: &quot;河东区&quot;</span><br><span class="line">    &#125;, &#123;</span><br><span class="line">        value: &quot;120104&quot;,</span><br><span class="line">        text: &quot;南开区&quot;</span><br><span class="line">    &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;])</span><br><span class="line">picker.pickers[0].setSelectedIndex(1);</span><br><span class="line">picker.pickers[1].setSelectedIndex(1);</span><br><span class="line">picker.show(function(SelectedItem) &#123;</span><br><span class="line">picker.dispose()；</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="时间选择器"><a href="#时间选择器" class="headerlink" title="时间选择器"></a>时间选择器</h3><blockquote><p>poppicker组件依赖mui.picker.js/.css mui.poppicker.js/.css请务必在mui.js/css后中引用,也可统一引用 压缩版本:mui.picker.min.js</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">var dtPicker = new mui.DtPicker(); </span><br><span class="line">var options = &#123;</span><br><span class="line">type: &quot;date&quot;, //设置日历初始视图模式  详情参考mui</span><br><span class="line">beginDate: new Date(year, month, day), //设置开始日期 </span><br><span class="line">&#125;;</span><br><span class="line">dtPicker.show(function (rs) &#123; </span><br><span class="line">   /*</span><br><span class="line">* rs.value 拼合后的 value</span><br><span class="line">* rs.text 拼合后的 text</span><br><span class="line">* rs.y 年，可以通过 rs.y.vaue 和 rs.y.text 获取值和文本</span><br><span class="line">* rs.m 月，用法同年</span><br><span class="line">* rs.d 日，用法同年</span><br><span class="line">* rs.h 时，用法同年</span><br><span class="line">* rs.i 分（minutes 的第二个字母），用法同年</span><br><span class="line">*/</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="actionSheet-封装"><a href="#actionSheet-封装" class="headerlink" title="actionSheet 封装"></a>actionSheet 封装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">function()&#123;</span><br><span class="line">var btnArray = [&#123;title:&quot;选取现有的&quot;&#125;];</span><br><span class="line">plus.nativeUI.actionSheet( &#123;</span><br><span class="line">title:&quot;选择照片&quot;,</span><br><span class="line">cancel:&quot;取消&quot;,</span><br><span class="line">buttons:btnArray</span><br><span class="line">&#125;, function(e)&#123;</span><br><span class="line">var index = e.index;</span><br><span class="line">switch (index)&#123;</span><br><span class="line">case 0:</span><br><span class="line">//取消</span><br><span class="line">function()&#123;&#125;</span><br><span class="line">break;</span><br><span class="line">case 1:</span><br><span class="line">//选择照片</span><br><span class="line">function()&#123;&#125;</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line">&#125; );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="选取照片"><a href="#选取照片" class="headerlink" title="选取照片"></a>选取照片</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">function()&#123;//获取图片元素</span><br><span class="line">plus.gallery.pick(function(path) &#123;</span><br><span class="line">var ele = document.getElementById(&quot;imgUp&quot;);</span><br><span class="line">ele.innerHTML = &apos;&apos;;</span><br><span class="line">var img = new Image();</span><br><span class="line">img.src = path;</span><br><span class="line">ele.appendChild(img);            </span><br><span class="line">upload();</span><br><span class="line">&#125;, function() &#123;&#125;, &#123;</span><br><span class="line">filter: &quot;image&quot;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function upload()&#123;// 上传文件</span><br><span class="line">var files = document.querySelector(&apos;#imgUp&apos;);</span><br><span class="line">var wt=plus.nativeUI.showWaiting();</span><br><span class="line">var server = &quot;http://192.168.2.01:3000/xxx/UploadFile&quot;;</span><br><span class="line">    var task=plus.uploader.createUpload(server,&#123;method:&quot;POST&quot;&#125;,function(t,status)&#123; //上传完成</span><br><span class="line">        if(status==200)&#123;</span><br><span class="line">        var data = &#123;&#125;;</span><br><span class="line">        data.photo = t.responseText.split(&apos;,&apos;)[0]+t.responseText.split(&apos;,&apos;)[1];</span><br><span class="line">            console.log(&quot;上传成功：&quot;+t.responseText);</span><br><span class="line">            Ajax.then(function(r)&#123;//请求&#125;)</span><br><span class="line">            wt.close(); //关闭等待提示按钮</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            console.log(&quot;上传失败：&quot;+status);</span><br><span class="line">            wt.close();//关闭等待提示按钮</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    //添加其他参数</span><br><span class="line">    task.addData(&quot;name&quot;,&quot;test&quot;);</span><br><span class="line">    task.addFile(files.src,&#123;key:&quot;dddd&quot;&#125;);</span><br><span class="line">    task.start();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Mui问题BUG解决办法"><a href="#Mui问题BUG解决办法" class="headerlink" title="Mui问题BUG解决办法"></a>Mui问题BUG解决办法</h2><h3 id="IOS端键盘弹出后顶部导航栏乱飞"><a href="#IOS端键盘弹出后顶部导航栏乱飞" class="headerlink" title="IOS端键盘弹出后顶部导航栏乱飞"></a>IOS端键盘弹出后顶部导航栏乱飞</h3><blockquote><p>HTML结构</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;mui-scroll-wrapper mui-content&quot;&gt;</span><br><span class="line">&lt;div class=&quot;mui-scroll&quot;&gt;</span><br><span class="line">&lt;!--这里放置真实显示的DOM内容--&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><blockquote><p>JS</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mui(&apos;.mui-scroll-wrapper&apos;).scroll(&#123;</span><br><span class="line">deceleration: 0.0005 //flick 减速系数，系数越大，滚动速度越慢，滚动距离越小，默认值0.0006</span><br><span class="line">&#125;);</span><br><span class="line">if(window.plus &amp;&amp; mui.os.ios)&#123;</span><br><span class="line">var ws = plus.webview.currentWebview();</span><br><span class="line">ws.setStyle(&#123;</span><br><span class="line">softinputMode:&apos;adjustResize&apos;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="IOS端由BUG1引起的光标错位"><a href="#IOS端由BUG1引起的光标错位" class="headerlink" title="IOS端由BUG1引起的光标错位"></a>IOS端由BUG1引起的光标错位</h3><blockquote><p> 修改mui.js如下添加判断  ios端关闭’translate3d</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">_getTranslateStr: function(x, y) &#123;</span><br><span class="line">if (this.options.hardwareAccelerated &amp;&amp; mui.os.android) &#123;</span><br><span class="line">return &apos;translate3d(&apos; + x + &apos;px,&apos; + y + &apos;px,0px) &apos; + this.translateZ;</span><br><span class="line">&#125;</span><br><span class="line">return &apos;translate(&apos; + x + &apos;px,&apos; + y + &apos;px) &apos;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Mui结合vue的方案"><a href="#Mui结合vue的方案" class="headerlink" title="Mui结合vue的方案"></a>Mui结合vue的方案</h2><h3 id="在vue中使用picker封装-单个picker-（结合BUG1，-BUG2方案使用）"><a href="#在vue中使用picker封装-单个picker-（结合BUG1，-BUG2方案使用）" class="headerlink" title="在vue中使用picker封装(单个picker)（结合BUG1， BUG2方案使用）"></a>在vue中使用picker封装(单个picker)（结合BUG1， BUG2方案使用）</h3><blockquote><p>备注：需在mui.js中picker取消和蒙版消失处添加setTimeout(function(){a.panel.style.display=”none”},350)  解决键盘弹出后会重新计算webview导致picker出现的问题</p></blockquote><blockquote><p> HTML结构</p></blockquote><p><code>&lt;input type=&quot;text&quot; v-picker=&quot;{name:&#39;picker&#39;}&quot; readonly &gt;</code></p><blockquote><p> JS</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">mounted: function() &#123;</span><br><span class="line">$j(&apos;.mui-poppicker&apos;).hide();//解决键盘弹出后会重新计算webview导致picker出现的问题</span><br><span class="line">&#125;,</span><br><span class="line">directives:&#123;</span><br><span class="line">picker:function(el, binding)&#123;</span><br><span class="line">binding.value.name = new mui.PopPicker();</span><br><span class="line">binding.value.name.setData(binding.value.data);</span><br><span class="line">el.addEventListener(&apos;tap&apos;, function(event) &#123;</span><br><span class="line">$j(binding.value.name.panel).show();</span><br><span class="line">document.activeElement.blur();//失去焦点</span><br><span class="line">binding.value.name.show(function(selectItems) &#123;</span><br><span class="line">$j(el).val(selectItems[0].text);</span><br><span class="line">setTimeout(function()&#123;</span><br><span class="line">$j(binding.value.name.panel).hide();</span><br><span class="line">&#125;,350)</span><br><span class="line">binding.value.name.hide();</span><br><span class="line">/*binding.value.name.dispose();只能选一次*/</span><br><span class="line">&#125;);</span><br><span class="line">&#125;, false);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="在vue中使用picker封装-多个在1的基础上修改"><a href="#在vue中使用picker封装-多个在1的基础上修改" class="headerlink" title="在vue中使用picker封装(多个在1的基础上修改)"></a>在vue中使用picker封装(多个在1的基础上修改)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">Ajax.then(function(r)&#123;</span><br><span class="line">localStorage.relatives_type = JSON.stringify(app.relatives_type)</span><br><span class="line">localStorage.edu_status = JSON.stringify(app.edu_status)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">directives:&#123;</span><br><span class="line">picker: &#123;</span><br><span class="line">bind:function(el, binding)&#123;</span><br><span class="line">var data=binding.value.pickerType == 0 ? JSON.parse(localStorage.edu_status): JSON.parse(localStorage.relatives_type);</span><br><span class="line">binding.value.name = new mui.PopPicker();</span><br><span class="line">binding.value.name.setData(data);</span><br><span class="line">el.addEventListener(&apos;tap&apos;, function(event) &#123;</span><br><span class="line">$j(binding.value.name.panel).show();</span><br><span class="line">document.activeElement.blur();//失去焦点</span><br><span class="line">binding.value.name.show(function(selectItems) &#123;</span><br><span class="line">$j(el).val(selectItems[0].text);</span><br><span class="line">setTimeout(function()&#123;</span><br><span class="line">$j(binding.value.name.panel).hide();</span><br><span class="line">&#125;,350)</span><br><span class="line">binding.value.name.hide();</span><br><span class="line">/*binding.value.name.dispose();只能选一次*/</span><br><span class="line">&#125;);</span><br><span class="line">&#125;, false);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="在vue中使用-style"><a href="#在vue中使用-style" class="headerlink" title="在vue中使用:style"></a>在vue中使用:style</h3><p><code>:style=&quot;{backgroundImage: &#39;url(&#39;+c.imageUrl+&#39;)&#39;}&quot;</code>    </p><h3 id="在vue做版本更新"><a href="#在vue做版本更新" class="headerlink" title="在vue做版本更新"></a>在vue做版本更新</h3><h4 id="本地JS"><a href="#本地JS" class="headerlink" title="本地JS"></a>本地JS</h4><blockquote><ul><li>配置</li><li>不能在vue里面创建  只能在外面创建</li></ul></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">var server=&quot;http://www.xrtxdgs.com/XRT/static/version/version.json&quot;,//获取升级描述文件服务器地址</span><br><span class="line">localDir=&quot;update&quot;,localFile=&quot;version.json&quot;,//本地保存升级描述目录和文件名</span><br><span class="line">keyUpdate=&quot;updateCheck&quot;,//取消升级键名</span><br><span class="line">keyAbort=&quot;updateAbort&quot;,//忽略版本键名</span><br><span class="line">checkInterval=604800000,//升级检查间隔，单位为ms,7天为7*24*60*60*1000=604800000, 如果每次启动需要检查设置值为0</span><br><span class="line">dir=null;</span><br></pre></td></tr></table></figure><blockquote><ul><li>准备升级操作</li><li>创建升级文件保存目录</li></ul></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">initUpdate:function ()&#123;// 在流应用模式下不需要检测升级操作</span><br><span class="line">if(navigator.userAgent.indexOf(&apos;StreamApp&apos;)&gt;=0)&#123;</span><br><span class="line">return;</span><br><span class="line">&#125;</span><br><span class="line">// 打开doc根目录</span><br><span class="line">plus.io.requestFileSystem( plus.io.PRIVATE_DOC, function(fs)&#123;</span><br><span class="line">fs.root.getDirectory(localDir, &#123;create:true&#125;,function(entry)&#123;</span><br><span class="line">dir = entry;</span><br><span class="line">app.checkUpdate();</span><br><span class="line">console.log( &quot;当前现在目录    &quot;+entry.name );</span><br><span class="line">&#125;, function(e)&#123;</span><br><span class="line">console.log( &quot;准备升级操作，打开update目录失败：&quot;+e.message );</span><br><span class="line">&#125;);</span><br><span class="line">&#125;,function(e)&#123;</span><br><span class="line">console.log( &quot;准备升级操作，打开doc目录失败：&quot;+e.message );</span><br><span class="line">&#125;);</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><blockquote><ul><li>检测程序升级</li></ul></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">checkUpdate:function() &#123;</span><br><span class="line">// 判断升级检测是否过期</span><br><span class="line">/*var lastcheck = plus.storage.getItem(keyUpdate );</span><br><span class="line">if ( lastcheck ) &#123;</span><br><span class="line">var dc = parseInt( lastcheck );</span><br><span class="line">var dn = (new Date()).getTime();</span><br><span class="line">if ( dn-dc &lt;checkInterval ) &#123;// 未超过上次升级检测间隔，不需要进行升级检查</span><br><span class="line">return;</span><br><span class="line">&#125;</span><br><span class="line">// 取消已过期，删除取消标记</span><br><span class="line">plus.storage.removeItem(keyUpdate );</span><br><span class="line">&#125;*/</span><br><span class="line">// 读取本地升级文件</span><br><span class="line">dir.getFile(localFile, &#123;create:false&#125;, function(fentry)&#123;</span><br><span class="line">fentry.file( function(file)&#123;</span><br><span class="line">var reader = new plus.io.FileReader();</span><br><span class="line">reader.onloadend = function ( e ) &#123;</span><br><span class="line">/*fentry.remove();*/</span><br><span class="line">app.getUpdateData();</span><br><span class="line">var data = null;</span><br><span class="line">try&#123;</span><br><span class="line">data=JSON.parse(e.target.result);</span><br><span class="line">&#125;catch(e)&#123;</span><br><span class="line">console.log( &quot;读取本地升级文件，数据格式错误！&quot; );</span><br><span class="line">return;</span><br><span class="line">&#125;</span><br><span class="line">app.checkUpdateData( data );</span><br><span class="line">&#125;</span><br><span class="line">reader.readAsText(file);</span><br><span class="line">&#125;, function(e)&#123;</span><br><span class="line">console.log( &quot;读取本地升级文件，获取文件对象失败：&quot;+e.message );</span><br><span class="line">fentry.remove();</span><br><span class="line">&#125; );</span><br><span class="line">&#125;, function(e)&#123;</span><br><span class="line">// 失败表示文件不存在，从服务器获取升级数据</span><br><span class="line">console.log( &quot;本地升级文件不存在,从服务器获取升级数据&quot;);</span><br><span class="line">app.getUpdateData();</span><br><span class="line">&#125;);</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><blockquote><ul><li>检查升级数据</li></ul></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">checkUpdateData:function( j )&#123;</span><br><span class="line">var curVer=plus.runtime.version;</span><br><span class="line">console.log(curVer)</span><br><span class="line">inf = j[plus.os.name];</span><br><span class="line">console.log(JSON.stringify(j[plus.os.name]))</span><br><span class="line">if ( inf )&#123;</span><br><span class="line">var srvVer = inf.version;</span><br><span class="line">// 判断是否存在忽略版本号</span><br><span class="line">var vabort = plus.storage.getItem( keyAbort );</span><br><span class="line">if ( vabort &amp;&amp; srvVer==vabort ) &#123;</span><br><span class="line">// 忽略此版本</span><br><span class="line">return;</span><br><span class="line">&#125;</span><br><span class="line">// 判断是否需要升级</span><br><span class="line">if ( this.compareVersion(curVer,srvVer) ) &#123;</span><br><span class="line">// 提示用户是否升级</span><br><span class="line">plus.nativeUI.confirm( inf.note, function(i)&#123;</span><br><span class="line">if ( 0==i.index ) &#123;</span><br><span class="line">plus.runtime.openURL( inf.url );</span><br><span class="line">&#125; else if ( 1==i.index ) &#123;</span><br><span class="line">plus.storage.setItem( keyAbort, srvVer );</span><br><span class="line">plus.storage.setItem( keyUpdate, (new Date()).getTime().toString() );</span><br><span class="line">&#125; else &#123;</span><br><span class="line">plus.storage.setItem( keyUpdate, (new Date()).getTime().toString() );</span><br><span class="line">&#125;</span><br><span class="line">&#125;, inf.title, [&quot;立即更新&quot;,&quot;跳过此版本&quot;,&quot;取　　消&quot;] );</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><blockquote><ul><li>从服务器获取升级数据</li></ul></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">getUpdateData:function ()&#123;</span><br><span class="line">var xhr = new plus.net.XMLHttpRequest();</span><br><span class="line">xhr.onreadystatechange = function () &#123;</span><br><span class="line">        switch ( xhr.readyState ) &#123;</span><br><span class="line">            case 4:</span><br><span class="line">                if ( xhr.status == 200 ) &#123;</span><br><span class="line">                // 保存到本地文件中</span><br><span class="line">                dir.getFile( localFile, &#123;create:true&#125;, function(fentry)&#123;</span><br><span class="line">                fentry.createWriter( function(writer)&#123;</span><br><span class="line">                writer.onerror = function()&#123;</span><br><span class="line">                console.log( &quot;获取升级数据，保存文件失败！&quot; );</span><br><span class="line">                &#125;</span><br><span class="line">                writer.write( xhr.responseText );</span><br><span class="line">                &#125;, function(e)&#123;</span><br><span class="line">                console.log( &quot;获取升级数据，创建写文件对象失败：&quot;+e.message );</span><br><span class="line">                &#125; );</span><br><span class="line">                &#125;, function(e)&#123;</span><br><span class="line">                console.log( &quot;获取升级数据，打开保存文件失败：&quot;+e.message );</span><br><span class="line">                &#125;);</span><br><span class="line">                &#125; else &#123;</span><br><span class="line">                console.log( &quot;获取升级数据，联网请求失败：&quot;+xhr.status );</span><br><span class="line">                &#125;</span><br><span class="line">                break;</span><br><span class="line">            default :</span><br><span class="line">                break;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">xhr.open( &quot;GET&quot;, server );</span><br><span class="line">xhr.send();</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><blockquote><ul><li>比较版本大小，如果新版本nv大于旧版本ov则返回true，否则返回false</li><li>@param {String} ov</li><li>@param {String} nv</li><li>@return {Boolean} </li></ul></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">compareVersion:function ( ov, nv )&#123;</span><br><span class="line">if ( !ov || !nv || ov==&quot;&quot; || nv==&quot;&quot; )&#123;</span><br><span class="line">return false;</span><br><span class="line">&#125;</span><br><span class="line">var b=false,</span><br><span class="line">ova = ov.split(&quot;.&quot;,4),</span><br><span class="line">nva = nv.split(&quot;.&quot;,4);</span><br><span class="line">for ( var i=0; i&lt;ova.length&amp;&amp;i&lt;nva.length; i++ ) &#123;</span><br><span class="line">var so=ova[i],no=parseInt(so),sn=nva[i],nn=parseInt(sn);</span><br><span class="line">if ( nn&gt;no || sn.length&gt;so.length  ) &#123;</span><br><span class="line">return true;</span><br><span class="line">&#125; else if ( nn&lt;no ) &#123;</span><br><span class="line">mui.toast(&apos;暂无更新&apos;)</span><br><span class="line">return false;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">if ( nva.length&gt;ova.length &amp;&amp; 0==nv.indexOf(ov) ) &#123;</span><br><span class="line">return true;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="服务器上"><a href="#服务器上" class="headerlink" title="服务器上"></a>服务器上</h4><p><code>var server = serverUrl +&quot;UpdateBsnLicense&quot;;//json服务器路径</code></p><blockquote><ul><li>服务器上面的version.json</li></ul></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;appid&quot;: &quot;App&quot;,</span><br><span class="line">    &quot;iOS&quot;: &#123;</span><br><span class="line">        &quot;version&quot;: &quot;1.0.1&quot;,</span><br><span class="line">        &quot;title&quot;: &quot;1.0.1版本更新&quot;,</span><br><span class="line">        &quot;note&quot;: &quot;新增自动升级检测功能\n新增分享功能演示页面\n新增推送功能演示页面\n&quot;,</span><br><span class="line">        &quot;url&quot;: &quot;itms-apps://itunes.apple.com/cn/app/hello-h5+/id682211190?l=zh&amp;mt=8&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;Android&quot;: &#123;</span><br><span class="line">        &quot;version&quot;: &quot;1.0.1&quot;,</span><br><span class="line">        &quot;title&quot;: &quot;1.0.1版本更新&quot;,</span><br><span class="line">        &quot;note&quot;: &quot;新增自动升级检测功能\n新增分享功能演示页面\n新增推送功能演示页面\n&quot;,</span><br><span class="line">        &quot;url&quot;: &quot;http://www.app.com/app/static/version/app.apk&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="在vue中循环中倒计时"><a href="#在vue中循环中倒计时" class="headerlink" title="在vue中循环中倒计时"></a>在vue中循环中倒计时</h3><blockquote><p>HTML</p></blockquote><p><code>&lt;div v-time-countdown=&quot;{getTime:getTimeCoutDown,time:&#39;2017-10-10&#39;}&quot;&gt;&lt;/div&gt;</code></p><blockquote><p>JS</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">getTimeCoutDown:function(time)&#123;</span><br><span class="line">var leftTime = time;</span><br><span class="line">if(leftTime&lt;=0)&#123;</span><br><span class="line">return (0 + &quot;天&quot; + 0 +&quot;小时&quot; + 0 +&quot;分&quot; + 0 +&quot;秒&quot;);</span><br><span class="line">else&#123;</span><br><span class="line">var days = parseInt(leftTime / 1000 / 60 / 60 / 24 , 10); //计算剩余的天数 </span><br><span class="line">var hours = parseInt(leftTime / 1000 / 60 / 60 % 24 , 10); //计算剩余的小时 </span><br><span class="line">var minutes = parseInt(leftTime / 1000 / 60 % 60, 10);//计算剩余的分钟 </span><br><span class="line">var seconds = parseInt(leftTime / 1000 % 60, 10);//计算剩余的秒数 </span><br><span class="line">days = checkTime(days); </span><br><span class="line">hours = checkTime(hours); </span><br><span class="line">minutes = checkTime(minutes); </span><br><span class="line">seconds = checkTime(seconds); </span><br><span class="line">function checkTime(i)&#123; //将0-9的数字前面加上0，例1变为01 </span><br><span class="line">if(i&lt;10) </span><br><span class="line">&#123; </span><br><span class="line">i = &quot;0&quot; + i; </span><br><span class="line">&#125; </span><br><span class="line">return i; </span><br><span class="line">&#125; </span><br><span class="line">return (&quot;&lt;b&gt;倒计时：&lt;/b&gt;&lt;span&gt;&quot;+days+&quot;&lt;/span&gt;日&lt;span&gt;&quot;+hours+&quot;&lt;/span&gt;小时&lt;span&gt;&quot;+minutes+&quot;&lt;/span&gt;分&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">directives:&#123;</span><br><span class="line">&apos;time-countdown&apos;:&#123;</span><br><span class="line">bind:function(el, binding)&#123;</span><br><span class="line">el.innerHTML = binding.value.getTime(new Date(binding.value.time) - new Date())</span><br><span class="line">setInterval(function()&#123;</span><br><span class="line">now = new Date();</span><br><span class="line">el.innerHTML = binding.value.getTime(new Date(binding.value.time) - now);</span><br><span class="line">&#125;,1000);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="在vue中使用上传图片"><a href="#在vue中使用上传图片" class="headerlink" title="在vue中使用上传图片"></a>在vue中使用上传图片</h3><blockquote><p>CSS</p></blockquote><blockquote><p>HTML</p></blockquote><blockquote><p>JS</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">new Vue(&#123;</span><br><span class="line">el:&apos;#app&apos;,</span><br><span class="line">data:&#123;</span><br><span class="line">sendInfo:&#123;</span><br><span class="line">imgUrl:&apos;&apos;</span><br><span class="line">&#125;,</span><br><span class="line">nativeUrl:&apos;&apos;</span><br><span class="line">&#125;,</span><br><span class="line">methods:&#123;</span><br><span class="line">upload:function()&#123;//获取图片元素</span><br><span class="line">plus.gallery.pick(function(path) &#123;     </span><br><span class="line">upload(path);</span><br><span class="line">&#125;, function() &#123;&#125;, &#123;</span><br><span class="line">filter: &quot;image&quot;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;,</span><br><span class="line">upload:function(path)&#123;// 上传文件</span><br><span class="line">var wt=plus.nativeUI.showWaiting();</span><br><span class="line">var server = &quot;http://192.168.2.01:3000/xxx/UploadFile&quot;;</span><br><span class="line">    var task=plus.uploader.createUpload(server,&#123;method:&quot;POST&quot;&#125;,function(t,status)&#123; //上传完成</span><br><span class="line">        if(status==200)&#123;</span><br><span class="line">        var data = &#123;&#125;;</span><br><span class="line">        data.photo = t.responseText.split(&apos;,&apos;)[0]+t.responseText.split(&apos;,&apos;)[1];</span><br><span class="line">            console.log(&quot;上传成功：&quot;+t.responseText);</span><br><span class="line">            Ajax.then(function(r)&#123;//请求&#125;)</span><br><span class="line">            wt.close(); //关闭等待提示按钮</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            console.log(&quot;上传失败：&quot;+status);</span><br><span class="line">            wt.close();//关闭等待提示按钮</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    //添加其他参数</span><br><span class="line">    task.addData(&quot;name&quot;,&quot;test&quot;);</span><br><span class="line">    task.addFile(files.src,&#123;key:&quot;dddd&quot;&#125;);</span><br><span class="line">    task.start();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Mui组件通用CSS类名&quot;&gt;&lt;a href=&quot;#Mui组件通用CSS类名&quot; class=&quot;headerlink&quot; title=&quot;Mui组件通用CSS类名&quot;&gt;&lt;/a&gt;Mui组件通用CSS类名&lt;/h2&gt;&lt;h3 id=&quot;省略&quot;&gt;&lt;a href=&quot;#省略&quot; class=&quot;
      
    
    </summary>
    
      <category term="mui.js+vue.js开发" scheme="https://liuhoi.github.io/categories/mui-js-vue-js%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="mui" scheme="https://liuhoi.github.io/tags/mui/"/>
    
      <category term="vue" scheme="https://liuhoi.github.io/tags/vue/"/>
    
      <category term="JavaScript" scheme="https://liuhoi.github.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>ios 证书申请和APP上架</title>
    <link href="https://liuhoi.github.io/2017/11/04/ios-%E8%AF%81%E4%B9%A6%E7%94%B3%E8%AF%B7%E5%92%8CAPP%E4%B8%8A%E6%9E%B6/"/>
    <id>https://liuhoi.github.io/2017/11/04/ios-证书申请和APP上架/</id>
    <published>2017-11-04T13:14:49.000Z</published>
    <updated>2018-04-09T14:20:16.031Z</updated>
    
    <content type="html"><![CDATA[<h2 id="证书申请第一部分：成员介绍"><a href="#证书申请第一部分：成员介绍" class="headerlink" title="证书申请第一部分：成员介绍"></a>证书申请第一部分：成员介绍</h2><h3 id="1-Certification-证书"><a href="#1-Certification-证书" class="headerlink" title="1.Certification(证书)"></a>1.Certification(证书)</h3><blockquote><p>证书是对电脑开发资格的认证，每个开发者帐号有一套，分为两种：</p><ol><li>Developer Certification(开发证书)<br>安装在电脑上提供权限：开发人员通过设备进行真机测试。<br>可以生成副本供多台电脑安装；</li><li>Distribution Certification(发布证书)<br>安装在电脑上提供发布iOS程序的权限：开发人员可以制做测试版和发布版的程序。不可生成副本，仅有配置该证书的电脑才可使用；</li></ol></blockquote><h3 id="2-Provisioning-Profile-授权文件"><a href="#2-Provisioning-Profile-授权文件" class="headerlink" title="2.Provisioning Profile(授权文件)"></a>2.Provisioning Profile(授权文件)</h3><blockquote><p>授权文件是对设备如iPod Touch、iPad、iPhone的授权，文件内记录的是设备的UDID和程序的App Id，即：使被授权的设备可以安装或调试Bundle identifier与授权文件中记录的App Id对应的程序。<br>开发者帐号在创建授权文件时候会选择App Id，（开发者帐号下App Id中添加，单选）和UDID（开发者帐号下Devices中添加最多100个，多选）。<br>授权文件分为两种，对应相应的证书使用：</p><ol><li>Developer Provisioning Profile(开发授权文件)<br>在装有开发证书或副本的电脑上使用，开发人员选择该授权文件通过电脑将程序安装到授权文件记录的设备中，即可进行真机测试。<br>注意：确保电脑有权限真机调试，即安装了开发证书或副本；在开发工具中程序的Bundle identifier和选中使用的授权文件的App Id要一致；连接调试的设备的UDID在选中的授权文件中有记录。</li><li>Distribution Provisioning Profile(发布授权文件)<br>在装有发布证书的电脑上（即配置证书的电脑，只有一台）制做测试版和发布版的程序。<br>发布版就是发布到App Store上的程序文件，开发者帐号创建授权文件时选择store选项，选择App Id，无需选择UDID；<br>测试版就是在发布之前交给测试人员可同步到设备上的程序文件，开发者帐号创建授权文件时选择AdHoc，选择App Id和UDID；只有选中的UDID对应的设备才可能安装上通过该授权文件制做的程序。</li></ol></blockquote><h3 id="3-Keychain-开发密钥"><a href="#3-Keychain-开发密钥" class="headerlink" title="3. Keychain(开发密钥)"></a>3. Keychain(开发密钥)</h3><blockquote><p>安装证书成功的情况下证书下都会生成Keychain，上面提到的证书副本（导出证书重新命名）就是通过配置证书的电脑导出Keychain（就是.p12文件）安装到其他机子上，让其他机子得到证书对应的权限。Developer Certification就可以制做副本Keychain分发到其他电脑上安装，使其可以进行真机测试。<br>注意：Distribution Certification只有配置证书的电脑才可使用，因此即使导出导出Keychain安装到其他电脑上，其他电脑也不可能具有证书的权限。</p></blockquote><h2 id="证书申请第二部分：证书申请流程"><a href="#证书申请第二部分：证书申请流程" class="headerlink" title="证书申请第二部分：证书申请流程"></a>证书申请第二部分：证书申请流程</h2><h3 id="step1-登录（99美元账号）https-developer-apple-com"><a href="#step1-登录（99美元账号）https-developer-apple-com" class="headerlink" title="step1:登录（99美元账号）https://developer.apple.com"></a>step1:登录（99美元账号）<a href="https://developer.apple.com" target="_blank" rel="noopener">https://developer.apple.com</a></h3><p> <img src="/2017/11/04/ios-证书申请和APP上架/c_1.jpg" alt="图片1"></p><ol><li><p>登录成功后在页面右侧选择“Certificates”：</p><p><img src="/2017/11/04/ios-证书申请和APP上架/c_2.jpg" alt="图片2"></p></li><li><p>打开之后可以看到面板：</p><p><img src="/2017/11/04/ios-证书申请和APP上架/c_3.jpg" alt="图片3"></p></li></ol><h3 id="step2-生成CSR文件"><a href="#step2-生成CSR文件" class="headerlink" title="step2:生成CSR文件"></a>step2:生成CSR文件</h3><ol><li><p>打开 -&gt;钥匙串访问</p><p><img src="/2017/11/04/ios-证书申请和APP上架/c_5.jpg" alt="图片5"></p></li><li><p>打开右上方钥匙串访问栏-&gt;证书助理-&gt;从证书颁发机构请求证书…</p><p><img src="/2017/11/04/ios-证书申请和APP上架/c_4.jpg" alt="图片4"></p></li><li><p>填写一个邮箱地址，选择“存储到磁盘”，点击继续，完成了。</p><p><img src="/2017/11/04/ios-证书申请和APP上架/c_6.jpg" alt="图片6"> </p></li></ol><p>申请成功后的文件：</p><p>  <img src="/2017/11/04/ios-证书申请和APP上架/c_7.jpg" alt="图片7"> </p><h3 id="step3-注册-App-ID-流程"><a href="#step3-注册-App-ID-流程" class="headerlink" title="step3:注册 App ID 流程"></a>step3:注册 App ID 流程</h3><ol><li><p>点c_3图面板中的App IDs 右上角的加号。然后填写App ID的名字：</p><p><img src="/2017/11/04/ios-证书申请和APP上架/c_8.jpg" alt="图片8"> </p></li><li><p>填写bundle ID:</p><p><img src="/2017/11/04/ios-证书申请和APP上架/c_9.jpg" alt="图片9"> </p></li><li><p>选择App需要支持的服务，（如：app耍要推送服务，就勾选Push Notifications)</p><p><img src="/2017/11/04/ios-证书申请和APP上架/c_10.jpg" alt="图片10"> </p></li><li>最后会有一个详细的内容列表，对应无误后，提交完成。</li></ol><h3 id="step4-证书申请"><a href="#step4-证书申请" class="headerlink" title="step4: 证书申请"></a>step4: 证书申请</h3><ol><li><p>选择证书的类型，下面罗列我们iOS开发常用的证书类型</p><p><img src="/2017/11/04/ios-证书申请和APP上架/c_11.jpg" alt="图片11"> </p></li><li><p>如果是申请推送证书，则会关联一个App ID</p><p><img src="/2017/11/04/ios-证书申请和APP上架/c_12.jpg" alt="图片12"> </p></li><li><p>上传我们之前建好的CSR文件(详见step2)</p><p><img src="/2017/11/04/ios-证书申请和APP上架/c_13.jpg" alt="图片13">  </p></li><li>恭喜你，到此为止，你完成了证书的申请，简单吧。</li></ol><h3 id="setp5-授权文件申请（Provisioning-Profile）"><a href="#setp5-授权文件申请（Provisioning-Profile）" class="headerlink" title="setp5:授权文件申请（Provisioning Profile）"></a>setp5:授权文件申请（Provisioning Profile）</h3><ol><li><p>选择授权文件类型，下面罗列了iOS常的授权文件类型</p><p><img src="/2017/11/04/ios-证书申请和APP上架/c_14.jpg" alt="图片14">   </p></li><li><p>选择关联App ID</p><p><img src="/2017/11/04/ios-证书申请和APP上架/c_15.jpg" alt="图片15">   </p></li><li><p>选择关联的证书</p><p><img src="/2017/11/04/ios-证书申请和APP上架/c_16.jpg" alt="图片16">   </p></li><li><p>选择授权的设备（通过 UDID），除了企业证书（inHouse）外，只有你添加的设备才能进行调度或测试</p><p><img src="/2017/11/04/ios-证书申请和APP上架/c_17.jpg" alt="图片17">   </p></li><li><p>给授权文件命一个能和其它授权文件区分的名字</p><p><img src="/2017/11/04/ios-证书申请和APP上架/c_18.jpg" alt="图片18">  </p></li></ol><blockquote><p>恭喜你，到此为止，授权文件申请完成了，简单吧。<br>在我们iOS开发中，常用的证书相关操作流程就全在上面了。</p></blockquote><h2 id="证书申请第三部分-总结"><a href="#证书申请第三部分-总结" class="headerlink" title="证书申请第三部分:总结"></a>证书申请第三部分:总结</h2><ol><li>成功安装测试证书的条件：a).开发者证书+私钥。 b).授权文件。</li><li>如果你想通过证书进行真机调试，请选择开发版证书(Development Certificate)，和相应的授权文件(Development Provisioning Profile) 。</li><li>如果你想让更多的开发者能进行真机调试，请先对需要真机调试的设备进行授权，然后将开发版证书(Development Certificate)下载到本机安装后导出为带私的.p12的文件，和相应的授权文件(Development Provisioning Profile)交由开发者安装，成功后即可进行真机调试。</li><li>如果你想让更多的机子进行真机测试，请先对需要测试的设备进行授权，然后选择生产版证书(Distribution Ad_hoc Certificate)和相应的授权文件(Distribution Ad_hoc Provisioning Profile)打包后分发给要测试的设备即可。</li></ol><h2 id="IOS上架"><a href="#IOS上架" class="headerlink" title="IOS上架"></a>IOS上架</h2><h3 id="1-HBuilder准备"><a href="#1-HBuilder准备" class="headerlink" title="1.HBuilder准备"></a>1.HBuilder准备</h3><ol><li>图标（需要一张1024*1024）<blockquote><p>APP显示用的图标  </p></blockquote></li><li>启动图片（安卓3张，ios13张）<br><img src="/2017/11/04/ios-证书申请和APP上架/c_19.jpg" alt="图片19"><br><img src="/2017/11/04/ios-证书申请和APP上架/c_20.jpg" alt="图片20">  </li></ol><h3 id="2-HBuilder打包需要的文件"><a href="#2-HBuilder打包需要的文件" class="headerlink" title="2.HBuilder打包需要的文件"></a>2.HBuilder打包需要的文件</h3><blockquote><p>AppID(Bundle ID)，私钥密码(生成p12证书时填写的密码)，<br>Profile文件（描述文件也称授权文件以.mobileprovision结尾），<br>私钥证书（p12证书以.p12结尾）</p></blockquote><p>   <img src="/2017/11/04/ios-证书申请和APP上架/c_21.jpg" alt="图片21">  </p><h3 id="3-Application-Loader-（苹果上传-ipa的软件）"><a href="#3-Application-Loader-（苹果上传-ipa的软件）" class="headerlink" title="3.Application Loader （苹果上传.ipa的软件）"></a>3.Application Loader （苹果上传.ipa的软件）</h3><ol><li>开发这账户<blockquote><p>登陆账户</p></blockquote></li><li><p>App专用密码</p><blockquote><p>前往<a href="https://appleid.apple.com" target="_blank" rel="noopener">https://appleid.apple.com</a> 申请  </p></blockquote><p><img src="/2017/11/04/ios-证书申请和APP上架/c_22.jpg" alt="图片22"> </p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2017/11/04/ios-证书申请和APP上架/c_23.jpg" alt="图片23" title="">                </div>                <div class="image-caption">图片23</div>            </figure>   </li></ol><h3 id="3-iTunes-connect准备-苹果的网站https-itunesconnect-apple-com-login"><a href="#3-iTunes-connect准备-苹果的网站https-itunesconnect-apple-com-login" class="headerlink" title="3.iTunes connect准备(苹果的网站https://itunesconnect.apple.com/login)"></a>3.iTunes connect准备(苹果的网站<a href="https://itunesconnect.apple.com/login" target="_blank" rel="noopener">https://itunesconnect.apple.com/login</a>)</h3><ol><li>图标（需要一张1024*1024）<blockquote><p>APP显示用的图标  </p></blockquote></li><li>APP宣传页(1-5张，分辨率需要如下)<br><img src="/2017/11/04/ios-证书申请和APP上架/c_24.jpg" alt="图片24"><br><img src="/2017/11/04/ios-证书申请和APP上架/c_25.jpg" alt="图片25"> </li><li>电话号码，邮箱，公司名称，技术支持网址(URL) 等<blockquote><p>电话号码，邮箱等 电话号码要加+86如+8613888888888<br>技术支持网址(URL):pc端官网</p></blockquote></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;证书申请第一部分：成员介绍&quot;&gt;&lt;a href=&quot;#证书申请第一部分：成员介绍&quot; class=&quot;headerlink&quot; title=&quot;证书申请第一部分：成员介绍&quot;&gt;&lt;/a&gt;证书申请第一部分：成员介绍&lt;/h2&gt;&lt;h3 id=&quot;1-Certification-证书&quot;&gt;&lt;
      
    
    </summary>
    
      <category term="ios" scheme="https://liuhoi.github.io/categories/ios/"/>
    
    
      <category term="ios" scheme="https://liuhoi.github.io/tags/ios/"/>
    
      <category term="证书申请" scheme="https://liuhoi.github.io/tags/%E8%AF%81%E4%B9%A6%E7%94%B3%E8%AF%B7/"/>
    
      <category term="APP上架" scheme="https://liuhoi.github.io/tags/APP%E4%B8%8A%E6%9E%B6/"/>
    
  </entry>
  
  <entry>
    <title>android 生成证书</title>
    <link href="https://liuhoi.github.io/2017/11/04/android-%E7%94%9F%E6%88%90%E8%AF%81%E4%B9%A6/"/>
    <id>https://liuhoi.github.io/2017/11/04/android-生成证书/</id>
    <published>2017-11-04T11:52:41.000Z</published>
    <updated>2018-04-09T14:20:15.951Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Android证书申请"><a href="#Android证书申请" class="headerlink" title="Android证书申请"></a>Android证书申请</h2><h3 id="打包前的准备"><a href="#打包前的准备" class="headerlink" title="打包前的准备"></a>打包前的准备</h3><h4 id="关于JDK-安装，以及Java环境的设置"><a href="#关于JDK-安装，以及Java环境的设置" class="headerlink" title="关于JDK 安装，以及Java环境的设置"></a>关于JDK 安装，以及Java环境的设置</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">下载JDK1.6，选择对应的安装路径</span><br><span class="line">配置相应的Java </span><br><span class="line">A、属性名称：JAVA_HOME   属性值：C:\Program Files\Java\jdk1.6.0_02</span><br><span class="line">B、属性名称：PATH   属性值：;%JAVA_HOME%\bin;%JAVA_HOME%\jre\bin</span><br><span class="line">C、属性名称：CLASSPATH   属性值：.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar</span><br><span class="line">(注意要加.表示当前路径，另外，%JAVA_HOME%就是引用前面指定的JAVA_HOME)</span><br></pre></td></tr></table></figure><font color="red" size="3">关于环境变量是否安装成功的测试</font><blockquote><p>“开始”－&gt;;“运行”，键入“cmd”；<br>键入命令命令，出现画面，说明环境变量配置成功：<br>        A、java -version；<br>        B、java；<br>        C、javac；</p></blockquote><h4 id="Android-SDK的安装与环境变量配置"><a href="#Android-SDK的安装与环境变量配置" class="headerlink" title="Android SDK的安装与环境变量配置"></a>Android SDK的安装与环境变量配置</h4><font color="red" size="3">注意：配置Andriod环境变量前提是要先安装好JAVA环境</font><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">下载Android SDK，点击安装，直接默认路径即可！ 下载地址：http://developer.android.com/sdk/index.html</span><br><span class="line">默认路径安装后，安装完成，开始配置环境变量。</span><br><span class="line">打开计算机属性——高级系统设置——环境变量（如上文）</span><br><span class="line">新建一个系统环境变量，变量名：ANDROID_HOME，变量值：D:\adt-bundle-windows-x86_64-20140702\sdk（以你安装目录为准,确认里面有tools和add-ons等多个文件夹），点击确认。</span><br><span class="line">在用户变量PATH后面加上变量值;%ANDROID_HOME%\platform-tools;点击确认即可。 在系统变量path中添加;D:\adt-bundle-windows-x86_64-20140702\sdk\tools</span><br><span class="line">Android SDK配置完成，接下来验证配置是否成功。</span><br><span class="line">点击运行——输入cmd——回车——输入adb——回车，如果出现一堆英文，显示成功，即表示配置成功，在输入Android，启动Android SDK Manager。</span><br></pre></td></tr></table></figure><h3 id="新建一个数字证书，即keystore文件"><a href="#新建一个数字证书，即keystore文件" class="headerlink" title="新建一个数字证书，即keystore文件"></a>新建一个数字证书，即keystore文件</h3><h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><blockquote><p>正式打包发布Android的apk应用，需要先选择或新建一个数字证书，即keystore文件，生成数字证书的常用方法有两：一是利用eclipse生成，二是在命令行中生成，下面我们来介绍如何在命令行中生成Android的数字证书。</p></blockquote><h4 id="首选需要安装jdk环境（这里默认已安装）"><a href="#首选需要安装jdk环境（这里默认已安装）" class="headerlink" title="首选需要安装jdk环境（这里默认已安装）"></a>首选需要安装jdk环境（这里默认已安装）</h4><blockquote><p>因为Android的数字证书keystore文件的生成是用了Java的数据证书管理工具Keytool。<br>确保配置好Java的环境后，使用Windows快捷键Win+R，调出“命令提示符”窗口，在窗口中输入cmd，打开命令行输入如下命令<br><code>keytool -genkey -alias android.keystore -keyalg RSA -validity 36500 -keystore android.keystore</code><br>（这句话的意思是：创建了一个名为android.keystore的别名也为android.keystore的采用RSA加密算法的有效期为100年的证书文件）<br>   注：<br>   -genkey 生成文件。<br>   -alias 别名。<br>   -keyalg 加密算法。<br>   -validity 有效期。<br>   -keystore 文件名。<br>  然后填写依次填写密钥库口令、确认口令、姓名与姓氏、组织单位、城市或区域、省/市/自治区、国家/地区代码，最后如果正确的话填“y”，如果错误的话直接“Enter”下去，重新 再填，如下图</p></blockquote><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2017/11/04/android-生成证书/pic1.jpg" alt="图片" title="">                </div>                <div class="image-caption">图片</div>            </figure><blockquote><p>注意：密钥库口令一定要记住，以后还会用到。<br>当输入”y”后没有回提示输入“输入&lt;android.keystore&gt;的密钥口令”，如果跟密钥库口令一样就按回车键，否则输入，然后再确认，就生成了数字证书，如下图所示</p></blockquote><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2017/11/04/android-生成证书/pic2.jpg" alt="图片" title="">                </div>                <div class="image-caption">图片</div>            </figure><blockquote><p>  运行结束会在C:\Users\Administrator目录下看到一个android.keystore文件<br>  在命令行中输入keytool -list -keystore “android.keystore”命令，然后输入命令就可以看到证书的相关信息，如下图所示。</p></blockquote><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2017/11/04/android-生成证书/pic3.jpg" alt="图片" title="">                </div>                <div class="image-caption">图片</div>            </figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Android证书申请&quot;&gt;&lt;a href=&quot;#Android证书申请&quot; class=&quot;headerlink&quot; title=&quot;Android证书申请&quot;&gt;&lt;/a&gt;Android证书申请&lt;/h2&gt;&lt;h3 id=&quot;打包前的准备&quot;&gt;&lt;a href=&quot;#打包前的准备&quot; cla
      
    
    </summary>
    
      <category term="android" scheme="https://liuhoi.github.io/categories/android/"/>
    
    
      <category term="android" scheme="https://liuhoi.github.io/tags/android/"/>
    
      <category term="keystore" scheme="https://liuhoi.github.io/tags/keystore/"/>
    
  </entry>
  
  <entry>
    <title>多台电脑上提交和更新github博客</title>
    <link href="https://liuhoi.github.io/2017/10/23/%E5%A4%9A%E5%8F%B0%E7%94%B5%E8%84%91%E4%B8%8A%E6%8F%90%E4%BA%A4%E5%92%8C%E6%9B%B4%E6%96%B0github%E5%8D%9A%E5%AE%A2/"/>
    <id>https://liuhoi.github.io/2017/10/23/多台电脑上提交和更新github博客/</id>
    <published>2017-10-23T12:43:39.000Z</published>
    <updated>2018-04-10T14:00:37.742Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第一步：git-init-初始化git"><a href="#第一步：git-init-初始化git" class="headerlink" title="第一步：git init 初始化git"></a>第一步：git init 初始化git</h2><h2 id="第二步：git-branch-查看当前分支情况"><a href="#第二步：git-branch-查看当前分支情况" class="headerlink" title="第二步：git branch 查看当前分支情况"></a>第二步：git branch 查看当前分支情况</h2><p><code>git branch  //查看当前分支情况</code><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2017/10/23/多台电脑上提交和更新github博客/seeBranch.jpg" alt="查看分支情况" title="">                </div>                <div class="image-caption">查看分支情况</div>            </figure><br>我现在有2个分支  master和hexo</p><h2 id="第三步：git-branch-分支名，新建一个自己的分支"><a href="#第三步：git-branch-分支名，新建一个自己的分支" class="headerlink" title="第三步：git branch 分支名，新建一个自己的分支"></a>第三步：git branch 分支名，新建一个自己的分支</h2><p><code>git branch 分支名  // 新建一个自己的分支</code><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2017/10/23/多台电脑上提交和更新github博客/seeBranch.jpg" alt="创建新分支" title="">                </div>                <div class="image-caption">创建新分支</div>            </figure></p><p>我已经创建了一个hexo分支，所以提示已存在</p><h2 id="第四步：git-checkout-分支名，切换到新建的分支"><a href="#第四步：git-checkout-分支名，切换到新建的分支" class="headerlink" title="第四步：git checkout 分支名，切换到新建的分支"></a>第四步：git checkout 分支名，切换到新建的分支</h2><p><code>git checkout 分支名    //切换到新建的分支</code></p><h2 id="第五步：git-branch，重新查看一下"><a href="#第五步：git-branch，重新查看一下" class="headerlink" title="第五步：git branch，重新查看一下"></a>第五步：git branch，重新查看一下</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2017/10/23/多台电脑上提交和更新github博客/seeBranch.jpg" alt="查看分支情况" title="">                </div>                <div class="image-caption">查看分支情况</div>            </figure><p>带星号表示当前分支</p><h2 id="第六步：git-remote-add-origin-github地址"><a href="#第六步：git-remote-add-origin-github地址" class="headerlink" title="第六步：git remote add origin github地址"></a>第六步：git remote add origin github地址</h2><p><code>git remote add origin git@github.com:liuhoi/liuhoi.github.io.git    //连接仓库</code></p><h2 id="第七步：进行add命令"><a href="#第七步：进行add命令" class="headerlink" title="第七步：进行add命令"></a>第七步：进行add命令</h2><p>执行命令git add –all,将修改保存到缓存区，如果想添加某一个文件，则将后面的–all换成你要提交的文件名即可。<br><code>git add --all  或者   git add .</code></p><h2 id="第八步：commit提交"><a href="#第八步：commit提交" class="headerlink" title="第八步：commit提交"></a>第八步：commit提交</h2><p>将增加的文件commit到本地仓库里去，执行命令git commmit -m “注释语句”</p><p><code>git commit -m &#39;注释语句&#39;（引号内容可改）</code></p><h2 id="第九步：git-push-u-origin-分支名-同步到github线上"><a href="#第九步：git-push-u-origin-分支名-同步到github线上" class="headerlink" title="第九步：git push -u origin 分支名,同步到github线上"></a>第九步：git push -u origin 分支名,同步到github线上</h2><p>将commit的代码push到远程分支</p><p><code>git push -u origin 分支名    //同步到线上新建分支</code></p><p>以后每次更新都执行这三步add,commit,push</p><h2 id="添加gitignore忽略上传的方法：vim-gitignore-wq保存设置"><a href="#添加gitignore忽略上传的方法：vim-gitignore-wq保存设置" class="headerlink" title="添加gitignore忽略上传的方法：vim .gitignore   :wq保存设置"></a>添加gitignore忽略上传的方法：vim .gitignore   :wq保存设置</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2017/10/23/多台电脑上提交和更新github博客/ignore.jpg" alt="忽略文件目录" title="">                </div>                <div class="image-caption">忽略文件目录</div>            </figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim .gitignore    //想要忽略上传的文件或文件夹  </span><br><span class="line">:wq保存设置 </span><br><span class="line">查看gitignore文件  可以看到有哪些是被忽略的</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;第一步：git-init-初始化git&quot;&gt;&lt;a href=&quot;#第一步：git-init-初始化git&quot; class=&quot;headerlink&quot; title=&quot;第一步：git init 初始化git&quot;&gt;&lt;/a&gt;第一步：git init 初始化git&lt;/h2&gt;&lt;h2 i
      
    
    </summary>
    
      <category term="blog" scheme="https://liuhoi.github.io/categories/blog/"/>
    
    
      <category term="hexo" scheme="https://liuhoi.github.io/tags/hexo/"/>
    
      <category term="github" scheme="https://liuhoi.github.io/tags/github/"/>
    
      <category term="git" scheme="https://liuhoi.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>hexo+github建立博客</title>
    <link href="https://liuhoi.github.io/2017/10/21/hexo+github%E5%BB%BA%E7%AB%8B%E5%8D%9A%E5%AE%A2/"/>
    <id>https://liuhoi.github.io/2017/10/21/hexo+github建立博客/</id>
    <published>2017-10-21T12:21:35.000Z</published>
    <updated>2018-04-09T14:20:15.990Z</updated>
    
    <content type="html"><![CDATA[<h2 id="nodeJs准备-下载地址"><a href="#nodeJs准备-下载地址" class="headerlink" title="nodeJs准备 下载地址"></a>nodeJs准备 <a href="http://nodejs.cn/" target="_blank" rel="noopener">下载地址</a></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">查询node版本：node -v</span><br><span class="line">查询npm版本：npm -v</span><br></pre></td></tr></table></figure><h2 id="github账户准备"><a href="#github账户准备" class="headerlink" title="github账户准备"></a>github账户准备</h2><p>第一步: Github注册<br>打开 <a href="https://github.com/join?source=header-home" target="_blank" rel="noopener">注册地址</a>，在下图的框中，分别输入自己的用户名，邮箱，密码。<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2017/10/21/hexo+github建立博客/githubRegister.jpg" alt="注册" title="">                </div>                <div class="image-caption">注册</div>            </figure></p><p>第二步: 创建代码库<br>登陆之后，点击页面右上角的加号，选择New repository：<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2017/10/21/hexo+github建立博客/createRepo1.jpg" alt="创建仓库1" title="">                </div>                <div class="image-caption">创建仓库1</div>            </figure><br>进入代码库创建页面：<br>在Repository name下填写yourname.github.io，Description (optional)下填写一些简单的描述（不写也没有关系），如图所示：<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2017/10/21/hexo+github建立博客/createRepo2.jpg" alt="创建仓库2" title="">                </div>                <div class="image-caption">创建仓库2</div>            </figure><br>注意：比如我的github名称是liuhoi ,这里你就填 liuhoi.github.io,如果你的名字是xiaoming，那你就填 xiaoming.github.io</p><p>第三步: Website设置 如下图所示<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2017/10/21/hexo+github建立博客/webSite1.jpg" alt="Website设置1" title="">                </div>                <div class="image-caption">Website设置1</div>            </figure><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2017/10/21/hexo+github建立博客/webSite2.jpg" alt="Website设置2" title="">                </div>                <div class="image-caption">Website设置2</div>            </figure></p><p> 如果你的配置没有问题，那么大约15分钟之后，yourname.github.io这个网址就可以正常访问了~ 如果yourname.github.io已经可以正常访问了，那么Github一侧的配置已经全部结束了。</p><h2 id="hexo-安装"><a href="#hexo-安装" class="headerlink" title="hexo 安装"></a>hexo 安装</h2><p>在自己认为合适的地方创建一个文件夹，这里我以E：/blog 为例子讲解，首先在E盘目录下创建blog文件夹，并在命令行的窗口进入到该目录<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2017/10/21/hexo+github建立博客/createFile.jpg" alt="创建文件夹" title="">                </div>                <div class="image-caption">创建文件夹</div>            </figure><br>进入之后 执行下面的命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">查询版本   hexo -version</span><br><span class="line">npm install hexo-cli -g</span><br><span class="line">hexo init blog</span><br><span class="line">cd blog</span><br><span class="line">npm install</span><br><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">npm install hexo-renderer-less --save(预处理Less文件，如不使用indigo主题，则不执行此命令)</span><br><span class="line">npm install hexo-generator-feed --save(用于生成 rss，如不使用indigo主题，则不执行此命令)</span><br><span class="line">npm install hexo-generator-json-content --save(用于生成静态站点数据，用作站内搜索的数据源，如不使用indigo主题，则不执行此命令)</span><br><span class="line">nnpm install hexo-helper-qrcode --save(用于生成微信分享二维码，如不使用indigo主题，则不执行此命令)</span><br><span class="line">npm install hexo-asset-image --save</span><br><span class="line">hexo generate</span><br><span class="line">hexo server</span><br><span class="line">在浏览器中打开http://localhost:4000，你将会看到效果</span><br></pre></td></tr></table></figure></p><p>注意：hexo用本地图片步骤<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">把主页配置文件_config.yml 里的post_asset_folder:这个选项设置为true</span><br><span class="line">在你的E：/blog/blog目录下执行这样一句话npm install hexo-asset-image --save，这是下载安装一个可以上传本地图片的插件</span><br><span class="line">运行hexo new &quot;xxxx&quot;来生成md博文时，/source/_posts文件夹内除了xxxx.md文件还有一个同名的文件夹最后在xxxx.md中想引入图片时，先把图片复制到xxxx这个文件夹中，然后只需要在xxxx.md中按照markdown的格式引入图片：![你想输入的替代文字](xxxx/图片名.jpg)注意： xxxx是这个md文件的名字，也是同名文件夹的名字。只需要有文件夹名字即可，不需要有什么绝对路径。你想引入的图片就只需要放入xxxx这个文件夹内就好了，很像引用相对路径。</span><br><span class="line">最后检查一下，hexo g生成页面后，进入public\2017\02\26\index.html文件中查看相关字段，可以发现，html标签内的语句是&lt;img src=&quot;2017/02/26/xxxx/图片名.jpg&quot;&gt;，而不是&lt;img src=&quot;xxxx/图片名.jpg&gt;。这很重要，关乎你的网页是否可以真正加载你想插入的图片。</span><br></pre></td></tr></table></figure></p><h2 id="git-下载地址"><a href="#git-下载地址" class="headerlink" title="git 下载地址"></a>git <a href="https://github.com/waylau/git-for-win" target="_blank" rel="noopener">下载地址</a></h2><p><code>查询版本   git --version</code><br><code>git config --system --list</code><br><code>git config --global  --list</code><br><code>git config --local  --list</code></p><h3 id="配置Git个人信息（使用gitCMD并且进入E：-blog-blog目录）"><a href="#配置Git个人信息（使用gitCMD并且进入E：-blog-blog目录）" class="headerlink" title="配置Git个人信息（使用gitCMD并且进入E：/blog/blog目录）"></a>配置Git个人信息（使用gitCMD并且进入E：/blog/blog目录）</h3><p>1、设置Git的user name和email：(如果是第一次的话)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;liuhui&quot;</span><br><span class="line">git config --global user.email &quot;pk3845473@163.com&quot;</span><br></pre></td></tr></table></figure></p><p>2、生成密钥<br><code>ssh-keygen -t rsa -C &quot;pk3845473@163.com&quot;</code> </p><h3 id="配置deploy"><a href="#配置deploy" class="headerlink" title="配置deploy"></a>配置deploy</h3><p>同样在config.yml文件中，找到deploy，然后按照如下修改：<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2017/10/21/hexo+github建立博客/delpoy.jpg" alt="deploy" title="">                </div>                <div class="image-caption">deploy</div>            </figure><br>图中红色箭头地址查看如下图：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2017/10/21/hexo+github建立博客/A.jpg" alt="https地址" title="">                </div>                <div class="image-caption">https地址</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2017/10/21/hexo+github建立博客/ssh.jpg" alt="ssh地址" title="">                </div>                <div class="image-caption">ssh地址</div>            </figure><p>配置好之后可以生成新文章：</p><p><code>生成新文章命令     hexo new post &quot;article title&quot;(只能为英文  否者在github中不能生成)</code><br>这时候在我的 电脑的目录下 E：\blog\blog\source\ _posts 将会看到 article title.md 文件<br>用MarDown编辑器打开就可以编辑文章了。文章编辑好之后，运行生成、部署命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">部署到github之前执行命令      hexo clean </span><br><span class="line">部署到github命令      hexo deploy</span><br></pre></td></tr></table></figure></p><h2 id="hexo-配置"><a href="#hexo-配置" class="headerlink" title="hexo 配置"></a>hexo 配置</h2><h3 id="hexo-config-yml配置"><a href="#hexo-config-yml配置" class="headerlink" title="hexo _config.yml配置"></a>hexo _config.yml配置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"># Hexo Configuration</span><br><span class="line">## Docs: https://hexo.io/docs/configuration.html</span><br><span class="line">## Source: https://github.com/hexojs/hexo/</span><br><span class="line"></span><br><span class="line"># Site  ##页面信息</span><br><span class="line">title: 刘辉的博客   ##标题，即浏览器标签栏显示的内容</span><br><span class="line">subtitle: 付出努力才会得到回报   ##副标题</span><br><span class="line">description: 刘辉的博客   ##描述，简介</span><br><span class="line">author: 刘辉     ##作者</span><br><span class="line">language: zh-CN   ##语言</span><br><span class="line">timezone:   ##时区</span><br><span class="line"></span><br><span class="line"># URL</span><br><span class="line">## If your site is put in a subdirectory, set url as &apos;http://yoursite.com/child&apos; and root as &apos;/child/&apos;</span><br><span class="line">url: https://liuhoi.github.io/    ##默认点击后URL地址</span><br><span class="line">root: /</span><br><span class="line">permalink: :year/:month/:day/:title/</span><br><span class="line">permalink_defaults:</span><br><span class="line"></span><br><span class="line"># Directory    ##文件目录，可不改</span><br><span class="line">source_dir: source</span><br><span class="line">public_dir: public</span><br><span class="line">tag_dir: tags</span><br><span class="line">archive_dir: archives</span><br><span class="line">category_dir: categories</span><br><span class="line">code_dir: downloads/code</span><br><span class="line">i18n_dir: :lang</span><br><span class="line">skip_render:</span><br><span class="line"></span><br><span class="line"># Writing    ##静态页面生成属性，可不改</span><br><span class="line">new_post_name: :title.md # File name of new posts</span><br><span class="line">default_layout: post</span><br><span class="line">titlecase: false # Transform title into titlecase</span><br><span class="line">external_link: true # Open external links in new tab</span><br><span class="line">filename_case: 0</span><br><span class="line">render_drafts: false</span><br><span class="line">post_asset_folder: true</span><br><span class="line">relative_link: false</span><br><span class="line">future: true</span><br><span class="line">highlight:</span><br><span class="line">  enable: true</span><br><span class="line">  line_number: true</span><br><span class="line">  auto_detect: false</span><br><span class="line">  tab_replace:</span><br><span class="line">  </span><br><span class="line"># Home page setting</span><br><span class="line"># path: Root path for your blogs index page. (default = &apos;&apos;)</span><br><span class="line"># per_page: Posts displayed per page. (0 = disable pagination)</span><br><span class="line"># order_by: Posts order. (Order by date descending by default)</span><br><span class="line">index_generator:</span><br><span class="line">  path: &apos;&apos;</span><br><span class="line">  per_page: 10</span><br><span class="line">  order_by: -date</span><br><span class="line">  </span><br><span class="line"># Category &amp; Tag   ##标签，可不改</span><br><span class="line">default_category: uncategorized</span><br><span class="line">category_map:</span><br><span class="line">tag_map:</span><br><span class="line"></span><br><span class="line"># Date / Time format    ##时间格式，可不改</span><br><span class="line">## Hexo uses Moment.js to parse and display date</span><br><span class="line">## You can customize the date format as defined in</span><br><span class="line">## http://momentjs.com/docs/#/displaying/format/</span><br><span class="line">date_format: YYYY-MM-DD</span><br><span class="line">time_format: HH:mm:ss</span><br><span class="line"></span><br><span class="line"># Pagination  ##每页显示文章数，按需改</span><br><span class="line">## Set per_page to 0 to disable pagination</span><br><span class="line">per_page: 10</span><br><span class="line">pagination_dir: page</span><br><span class="line"></span><br><span class="line"># Extensions  ##主题设置</span><br><span class="line">## Plugins: https://hexo.io/plugins/</span><br><span class="line">## Themes: https://hexo.io/themes/</span><br><span class="line">theme: indigo   ##主题设置（themes里面）</span><br><span class="line"></span><br><span class="line"># Deployment  ##git部署关联</span><br><span class="line">## Docs: https://hexo.io/docs/deployment.html</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https://github.com/liuhoi/liuhoi.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><h3 id="主题-config-yml配置"><a href="#主题-config-yml配置" class="headerlink" title="主题    _config.yml配置"></a>主题    _config.yml配置</h3><p>以我现在使用的indigo主题为例。首先将主题库clone到blog目录下的themes目录：<br><code>git clone git@github.com:yscoder/hexo-theme-indigo.git themes/indigo</code><br>indigo主题   _config.yml配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br></pre></td><td class="code"><pre><span class="line"># hexo-theme-indigo</span><br><span class="line"># https://github.com/yscoder/hexo-theme-indigo</span><br><span class="line"></span><br><span class="line"># 添加新菜单项遵循以下规则</span><br><span class="line"># menu:</span><br><span class="line">#  link:               fontawesome图标，省略前缀，本主题前缀为 icon-，必须</span><br><span class="line">#    text: About       菜单显示的文字，如果省略即默认与图标一致，首字母会转大写</span><br><span class="line">#    url: /about       链接，绝对或相对路径，必须。</span><br><span class="line">#    target: _blank    是否跳出，省略则在当前页面打开</span><br><span class="line">menu:</span><br><span class="line">  home:</span><br><span class="line">    text: 主页</span><br><span class="line">    url: /</span><br><span class="line">  archives:</span><br><span class="line">    text: 归档</span><br><span class="line">    url: /archives</span><br><span class="line">  tags:</span><br><span class="line">    text: 标签</span><br><span class="line">    url: /tags</span><br><span class="line">  th-list:</span><br><span class="line">    text: 分类</span><br><span class="line">    url: /categories</span><br><span class="line">  github:</span><br><span class="line">    url: https://liuhoi.github.io/</span><br><span class="line">    target: _blank</span><br><span class="line">  #weibo:</span><br><span class="line">    #url: http://www.weibo.com/ysweb</span><br><span class="line">   #target: _blank</span><br><span class="line">  #link:</span><br><span class="line">    #text: 测试</span><br><span class="line">    #url: /about</span><br><span class="line">rss: /atom.xml</span><br><span class="line"># 你的头像url</span><br><span class="line">avatar: /img/cat1.JPG</span><br><span class="line"># avatar link</span><br><span class="line">avatar_link: /</span><br><span class="line"># 头像背景图</span><br><span class="line">brand: /img/brand.jpg</span><br><span class="line"># favicon</span><br><span class="line">favicon: /img/cat1.JPG</span><br><span class="line"></span><br><span class="line"># email</span><br><span class="line">email: pk3845473@163.com</span><br><span class="line"></span><br><span class="line"># 设置 Android L Chrome 浏览器状态栏颜色</span><br><span class="line">color: &apos;#3F51B5&apos;</span><br><span class="line"></span><br><span class="line"># 页面标题</span><br><span class="line">tags_title: 标签</span><br><span class="line">archives_title: 归档</span><br><span class="line">categories_title: 分类</span><br><span class="line"></span><br><span class="line"># 文章截断</span><br><span class="line">excerpt_render: false</span><br><span class="line">excerpt_length: 200</span><br><span class="line">excerpt_link: 阅读全文...</span><br><span class="line">mathjax: false</span><br><span class="line">archive_yearly: true</span><br><span class="line"></span><br><span class="line"># 是否显示文章最后更新时间</span><br><span class="line">show_last_updated: true</span><br><span class="line"></span><br><span class="line"># 是否开启分享</span><br><span class="line">share: true</span><br><span class="line"></span><br><span class="line"># 是否开启打赏，关闭 reward: false</span><br><span class="line">reward:</span><br><span class="line">  title: 谢谢大爷~</span><br><span class="line">  wechat: /img/wechat.JPG     #微信，关闭设为 false</span><br><span class="line">  alipay: /img/alipay.JPG     #支付宝，关闭设为 false</span><br><span class="line"></span><br><span class="line"># 是否开启搜索</span><br><span class="line">search: true</span><br><span class="line"></span><br><span class="line"># 是否大屏幕下文章页隐藏导航</span><br><span class="line">hideMenu: true</span><br><span class="line"></span><br><span class="line"># 是否开启toc</span><br><span class="line"># toc: false</span><br><span class="line">toc:</span><br><span class="line">  list_number: true  # 是否显示数字排序</span><br><span class="line"></span><br><span class="line"># 文章页留言内容，hexo中所有变量及辅助函数等均可调用，具体请查阅 hexo.io</span><br><span class="line">postMessage: 这里可以写作者留言，标签和 hexo 中所有变量及辅助函数等均可调用，示例：&lt;a href=&quot;&lt;%- url_for(page.path).replace(/index\.html$/, &apos;&apos;) %&gt;&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;%- page.permalink.replace(/index\.html$/, &apos;&apos;) %&gt;&lt;/a&gt;</span><br><span class="line"></span><br><span class="line"># 站长统计，如要开启，输入CNZZ站点id，如 cnzz: 1255152447</span><br><span class="line">cnzz: false</span><br><span class="line"></span><br><span class="line"># 百度统计，如要开启，改为你的 key</span><br><span class="line">baidu_tongji: false</span><br><span class="line"></span><br><span class="line"># 腾讯分析，如要开启，输入站点id</span><br><span class="line">tajs: false</span><br><span class="line"></span><br><span class="line"># google</span><br><span class="line">google_analytics: false</span><br><span class="line">google_site_verification: false</span><br><span class="line"></span><br><span class="line"># less</span><br><span class="line">less:</span><br><span class="line">  compress: true</span><br><span class="line">  paths:</span><br><span class="line">    - source/css/style.less</span><br><span class="line"></span><br><span class="line"># 以下评论插件开启一个即可</span><br><span class="line"># 是否开启 disqus</span><br><span class="line">disqus_shortname: false</span><br><span class="line"># 是否开启友言评论, 填写友言用户id</span><br><span class="line">uyan_uid: false</span><br><span class="line"># 是否使用 gitment，https://github.com/imsun/gitment</span><br><span class="line">gitment: false</span><br><span class="line"># gitment:</span><br><span class="line">#   owner:</span><br><span class="line">#   repo:</span><br><span class="line">#   client_id:</span><br><span class="line">#   client_secret:</span><br><span class="line"></span><br><span class="line"># 规范网址</span><br><span class="line"># 让搜索引擎重定向你的不同域名、不同子域、同域不同目录的站点到你期望的路径</span><br><span class="line"># https://support.google.com/webmasters/answer/139066</span><br><span class="line"># 假设配置为 canonical: http://imys.net，那么从搜索引擎中 www.imys.net 进入会重定向到 imys.net</span><br><span class="line">canonical: false</span><br><span class="line"></span><br><span class="line"># 版权起始年份</span><br><span class="line">since_year: 2017</span><br><span class="line"></span><br><span class="line"># 用户页面中作者相关的描述性文字，如不需要设为 false</span><br><span class="line">about: 用户页面中作者相关的描述性文字，如不需要设为 false</span><br><span class="line"></span><br><span class="line"># “不蒜子”访问量统计，详见 http://ibruce.info/2015/04/04/busuanzi/</span><br><span class="line">visit_counter:</span><br><span class="line">  site_uv: 站点总访客数：</span><br><span class="line">  site_pv: 站点总访问量：</span><br><span class="line"></span><br><span class="line"># 动态定义title</span><br><span class="line">title_change:</span><br><span class="line">  normal: 刘辉的博客!</span><br><span class="line">  leave: 付出努力才会得到回报！</span><br><span class="line"></span><br><span class="line"># 设置为 true 发布后将使用 unpkg cdn</span><br><span class="line">cdn: true</span><br><span class="line"></span><br><span class="line"># 设置为 true 将使用 lightbox render 图片</span><br><span class="line">lightbox: true</span><br><span class="line"></span><br><span class="line"># icp备案号  ICP_license: 京ICP备1234556号-1</span><br><span class="line">ICP_license: false</span><br></pre></td></tr></table></figure><p>最后生成部署，来看看效果吧<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;nodeJs准备-下载地址&quot;&gt;&lt;a href=&quot;#nodeJs准备-下载地址&quot; class=&quot;headerlink&quot; title=&quot;nodeJs准备 下载地址&quot;&gt;&lt;/a&gt;nodeJs准备 &lt;a href=&quot;http://nodejs.cn/&quot; target=&quot;_b
      
    
    </summary>
    
      <category term="blog" scheme="https://liuhoi.github.io/categories/blog/"/>
    
    
      <category term="hexo" scheme="https://liuhoi.github.io/tags/hexo/"/>
    
      <category term="github" scheme="https://liuhoi.github.io/tags/github/"/>
    
      <category term="git" scheme="https://liuhoi.github.io/tags/git/"/>
    
      <category term="indigo" scheme="https://liuhoi.github.io/tags/indigo/"/>
    
  </entry>
  
</feed>
